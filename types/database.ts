// ============================================
// DRSS DATABASE TYPES
// ============================================
// This file contains TypeScript types generated from Supabase schema
//
// TO GENERATE TYPES AFTER RUNNING schema.sql:
// 1. Get your Supabase project ID from: https://supabase.com/dashboard/project/_/settings/general
// 2. Run: npx supabase gen types typescript --project-id YOUR_PROJECT_ID > types/database.ts
//
// For now, using a placeholder type until schema is applied
// ============================================

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      clients: {
        Row: {
          id: string
          user_id: string
          name: string
          email: string | null
          website: string | null
          intake_responses: Json | null
          brand_data: Json | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          email?: string | null
          website?: string | null
          intake_responses?: Json | null
          brand_data?: Json | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          email?: string | null
          website?: string | null
          intake_responses?: Json | null
          brand_data?: Json | null
          created_at?: string
          updated_at?: string
        }
      }
      projects: {
        Row: {
          id: string
          client_id: string
          name: string
          description: string | null
          status: string
          due_date: string | null
          priority: string | null
          position: number
          metadata: Json | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          client_id: string
          name: string
          description?: string | null
          status?: string
          due_date?: string | null
          priority?: string | null
          position?: number
          metadata?: Json | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          client_id?: string
          name?: string
          description?: string | null
          status?: string
          due_date?: string | null
          priority?: string | null
          position?: number
          metadata?: Json | null
          created_at?: string
          updated_at?: string
        }
      }
      // Additional table types will be generated by Supabase CLI
      // Run the command above after applying the schema
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      match_framework_chunks: {
        Args: {
          query_embedding: string
          match_threshold: number
          match_count: number
        }
        Returns: {
          id: number
          framework_id: string
          content: string
          similarity: number
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
  }
}

